name: 'PHPStan Auto-Fix'
description: 'Automatically fix common PHPStan issues and create a PR'
inputs:
  php-version:
    description: 'PHP version to use'
    required: false
    default: '8.4'
  memory-limit:
    description: 'Memory limit for PHPStan'
    required: false
    default: '512M'
  assignee:
    description: 'GitHub username to assign the PR to'
    required: false
    default: ''
  labels:
    description: 'Comma-separated list of labels to add to the PR'
    required: false
    default: 'bug,phpstan,auto-generated'

runs:
  using: 'composite'
  steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: composer-${{ hashFiles('composer.lock') }}

    - name: Install dependencies
      shell: bash
      run: composer install -n --prefer-dist

    - name: Run PHPStan to get errors
      id: phpstan-errors
      shell: bash
      run: |
        echo "errors=$(./vendor/bin/phpstan analyse --memory-limit=${{ inputs.memory-limit }} --error-format=json 2>/dev/null || echo '[]')" >> $GITHUB_OUTPUT
        echo "error_count=$(echo '${{ steps.phpstan-errors.outputs.errors }}' | jq length 2>/dev/null || echo '0')" >> $GITHUB_OUTPUT

    - name: Check if there are fixable errors
      id: check-errors
      shell: bash
      run: |
        error_count='${{ steps.phpstan-errors.outputs.error_count }}'
        if [ "$error_count" -gt 0 ]; then
          echo "has_errors=true" >> $GITHUB_OUTPUT
          echo "Found $error_count PHPStan errors"
        else
          echo "has_errors=false" >> $GITHUB_OUTPUT
          echo "No PHPStan errors found"
        fi

    - name: Create fix branch
      if: steps.check-errors.outputs.has_errors == 'true'
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b fix/phpstan-issues-${{ github.run_number }}

    - name: Apply common PHPStan fixes
      if: steps.check-errors.outputs.has_errors == 'true'
      shell: bash
      run: |
        echo "Applying common PHPStan fixes..."
        
        # Fix 1: Add missing return types for void functions
        find src -name "*.php" -exec sed -i 's/function \([a-zA-Z_][a-zA-Z0-9_]*\)(/function \1(): void(/g' {} \;
        
        # Fix 2: Add mixed type hints for properties
        find src -name "*.php" -exec sed -i 's/private \$\([a-zA-Z_][a-zA-Z0-9_]*\);/private \$\1: mixed;/g' {} \;
        find src -name "*.php" -exec sed -i 's/protected \$\([a-zA-Z_][a-zA-Z0-9_]*\);/protected \$\1: mixed;/g' {} \;
        find src -name "*.php" -exec sed -i 's/public \$\([a-zA-Z_][a-zA-Z0-9_]*\);/public \$\1: mixed;/g' {} \;
        
        # Fix 3: Add basic docblock annotations
        find src -name "*.php" -exec php -r '
          $file = $argv[1];
          $content = file_get_contents($file);
          $lines = explode("\n", $content);
          $newLines = [];
          
          foreach ($lines as $i => $line) {
            $newLines[] = $line;
            
            // Add docblock before function declarations
            if (preg_match("/^\s*function\s+[a-zA-Z_][a-zA-Z0-9_]*\s*\(/", $line)) {
              $indent = str_repeat(" ", strspn($line, " "));
              $newLines[] = $indent . "/**";
              $newLines[] = $indent . " * @return mixed";
              $newLines[] = $indent . " */";
            }
          }
          
          file_put_contents($file, implode("\n", $newLines));
        ' {} \;
        
        # Fix 4: Add array type hints
        find src -name "*.php" -exec sed -i 's/array</array<int, mixed></g' {} \;
        
        echo "Applied common fixes"

    - name: Check if fixes were applied
      if: steps.check-errors.outputs.has_errors == 'true'
      id: check-fixes
      shell: bash
      run: |
        if git diff --quiet; then
          echo "no_changes=true" >> $GITHUB_OUTPUT
          echo "No changes were made"
        else
          echo "no_changes=false" >> $GITHUB_OUTPUT
          echo "Changes were made"
          git diff --stat
        fi

    - name: Commit fixes
      if: steps.check-errors.outputs.has_errors == 'true' && steps.check-fixes.outputs.no_changes == 'false'
      shell: bash
      run: |
        git add .
        git commit -m "fix: automatically fix PHPStan issues

        - Added missing return types
        - Added type hints for properties
        - Added basic docblock annotations
        - Fixed array type declarations

        Auto-generated by GitHub Actions workflow."

    - name: Push changes
      if: steps.check-errors.outputs.has_errors == 'true' && steps.check-fixes.outputs.no_changes == 'false'
      shell: bash
      run: |
        git push origin fix/phpstan-issues-${{ github.run_number }}

    - name: Create Pull Request
      if: steps.check-errors.outputs.has_errors == 'true' && steps.check-fixes.outputs.no_changes == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const labels = '${{ inputs.labels }}'.split(',').map(l => l.trim()).filter(l => l);
          const assignees = '${{ inputs.assignee }}' ? ['${{ inputs.assignee }}'] : [];
          
          const { data: pr } = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸ”§ Auto-fix PHPStan Issues',
            head: 'fix/phpstan-issues-${{ github.run_number }}',
            base: '${{ github.event.workflow_run.head_branch }}',
            body: `## ðŸ”§ Automatically Fixed PHPStan Issues

            This PR was automatically created to fix PHPStan static analysis issues detected in the CI pipeline.

            ### What was fixed:
            - âœ… Added missing return types
            - âœ… Added type hints for class properties  
            - âœ… Added basic docblock annotations
            - âœ… Fixed array type declarations

            ### How it works:
            This PR was created by the PHPStan Auto-Fix action which:
            1. Detects when the PHPStan workflow fails
            2. Applies common fixes for typical issues
            3. Creates a PR with the fixes

            ### Review:
            Please review the changes and merge if they look correct. The fixes are based on common patterns and may need manual adjustment.

            ---
            *This PR was created automatically by GitHub Actions.*`
          });

          // Add labels
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: labels
            });
          }

          // Assign to specified user
          if (assignees.length > 0) {
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              assignees: assignees
            });
          }

          console.log(`Created PR #${pr.number}: ${pr.html_url}`);
